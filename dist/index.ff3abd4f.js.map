{"mappings":"AAAAA,OAAOC,WACL,CACEC,SAAS,EACRC,MAAK,IAKV,MAAMC,qBAAuB,uDACvBC,qBAAuB,wDACvBC,UAAU,wCACVC,SAAWC,SAASC,cAAc,WAKlCC,UAAYC,MAAOC,IACvB,MAAMC,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,MACrB,EAKHC,kBAAoBL,eACXD,UAAUN,sBAKnBa,mBAAqBN,eACZD,UAAUL,sBAMnBa,gBAAkBP,UAEtB,MAAQQ,KAAMC,SAA0BJ,oBAElCK,EAAwBD,EAAgB,IAEtCD,KAAMG,SAA0BL,sBAClCM,iBAAEA,GAAqBF,EAGIC,EAAgBE,QAAOC,GAAWF,EAAiBG,SAASD,EAAQE,MACzEC,SAASH,IAEdjB,SAASqB,eAAeJ,EAAQE,IACtCG,UAAU,iBACfL,EAAQM,qCACJzB,UAAUmB,EAAQO,sBAC5B,GACJ,EAOJd","sources":["RomanticPlacesSlideShow.js"],"sourcesContent":["Reveal.initialize(\r\n  {\r\n    stretch: true,\r\n     hash:true,\r\n  }\r\n\r\n);\r\n\r\nconst slideshow_topics_url = 'https://vs.contentportal.link/items/slideshow_topics';\r\nconst slideshow_slides_url = 'https://vs.contentportal.link/items/slideshow_slides/';\r\nconst imagesUrl='https://vs.contentportal.link/assets/'\r\nconst slideOne = document.querySelector('.slide1');\r\n\r\n\r\n\r\n// create a resuable function to fetch data\r\nconst fetchData = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\n\r\n// fetch all the slideShow topic data\r\nconst getSlideShowTopic = async () => {\r\n  return await fetchData(slideshow_topics_url)\r\n}\r\n\r\n\r\n// fetch all the slideShowSlides data\r\nconst getSlideShowSlides = async () => {\r\n  return await fetchData(slideshow_slides_url)\r\n}\r\n\r\n\r\n\r\n// lets create the 10 romantic place slide show\r\nconst createSlideShow = async () => {\r\n  // grab all the slides show topics\r\n  const { data: slideShowsTopic } = await getSlideShowTopic()\r\n  // get the ten romantic places  slideshow data\r\n  const tenRomanticPlacesData = slideShowsTopic[0]\r\n  //\r\n  const { data: slideShowSlides } = await getSlideShowSlides()\r\n  const { slideshow_slides } = tenRomanticPlacesData;\r\n\r\n  // filter the list of slidesshow to get only the slides relevent to 10 romantic places data\r\nconst slideForTheCurrentSlidShow = slideShowSlides.filter(element => slideshow_slides.includes(element.id))\r\n   slideForTheCurrentSlidShow.forEach((element) => { \r\n    // iterat over the slideShowSlides and map their data to a slider section\r\n      const currentSlide=document.getElementById(element.id)\r\n      currentSlide.innerHTML=`\r\n        <p >${element.content_text}</p>\r\n      <img  src=${imagesUrl+element.image}>     \r\n       `;\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\ncreateSlideShow()\r\n\r\n\r\n\r\n"],"names":["Reveal","initialize","stretch","hash","slideshow_topics_url","slideshow_slides_url","imagesUrl","slideOne","document","querySelector","fetchData","async","url","response","fetch","json","getSlideShowTopic","getSlideShowSlides","createSlideShow","data","slideShowsTopic","tenRomanticPlacesData","slideShowSlides","slideshow_slides","filter","element","includes","id","forEach","getElementById","innerHTML","content_text","image"],"version":3,"file":"index.ff3abd4f.js.map"}