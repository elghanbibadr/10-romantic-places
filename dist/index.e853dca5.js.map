{"mappings":"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","sources":["node_modules/reveal.js/dist/reveal.js","node_modules/reveal.js/js/utils/util.js","node_modules/reveal.js/js/utils/device.js","node_modules/reveal.js/node_modules/fitty/dist/fitty.module.js","node_modules/reveal.js/js/controllers/slidecontent.js","node_modules/reveal.js/js/controllers/slidenumber.js","node_modules/reveal.js/js/utils/color.js","node_modules/reveal.js/js/controllers/backgrounds.js","node_modules/reveal.js/js/utils/constants.js","node_modules/reveal.js/js/controllers/autoanimate.js","node_modules/reveal.js/js/controllers/fragments.js","node_modules/reveal.js/js/controllers/overview.js","node_modules/reveal.js/js/controllers/keyboard.js","node_modules/reveal.js/js/controllers/location.js","node_modules/reveal.js/js/controllers/controls.js","node_modules/reveal.js/js/controllers/progress.js","node_modules/reveal.js/js/controllers/pointer.js","node_modules/reveal.js/js/utils/loader.js","node_modules/reveal.js/js/controllers/plugins.js","node_modules/reveal.js/js/controllers/print.js","node_modules/reveal.js/js/controllers/touch.js","node_modules/reveal.js/js/controllers/focus.js","node_modules/reveal.js/js/controllers/notes.js","node_modules/reveal.js/js/components/playback.js","node_modules/reveal.js/js/config.js","node_modules/reveal.js/js/reveal.js","node_modules/reveal.js/js/index.js"],"sourcesContent":[null,"/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.4.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createSingletonNode","container","tagname","classname","innerHTML","nodes","length","testNode","node","document","createElement","appendChild","createStyleSheet","tag","type","styleSheet","cssText","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","getRemainingHeight","height","newHeight","oldHeight","offsetHeight","removeProperty","fileExtensionToMimeMap","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","toArray","nl","slice","DrawState","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","destroy","_","observeMutations","observer","disconnect","originalStyle","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","newbie","push","init","unfreeze","freeze","undefined","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","filename","getMimeTypeFromFile","excludeIframes","iframe","width","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","MAX_REPLACE_STATE_FREQUENCY","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","VERSION","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","initialize","initOptions","wrapper","defaultConfig","Util","setViewport","start","viewport","removeHiddenSlides","setupDOM","setupPostMessage","setupScrollPrevention","setupFullscreen","resetVerticalSlides","removeEventListeners","setupPDF","Device","pauseOverlay","statusElement","createStatusElement","position","overflow","clip","text","nodeType","isAriaHidden","isDisplayHidden","child","setInterval","scrollTop","scrollLeft","onFullscreenChange","onPostMessage","isReady","numberOfSlides","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","resumeAutoSlide","pauseAutoSlide","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","getVerticalStacks","stateLoop","j","splice","syncSlide","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","totalCount","allFragments","fragmentWeight","isVertical","getSlidesAttributes","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","deck"],"version":3,"file":"index.e853dca5.js.map","sourceRoot":"/__parcel_source_root/"}